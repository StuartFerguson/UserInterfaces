// <auto-generated />
using System;
using HandicapMobile.MockAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HandicapMobile.MockAPI.Migrations
{
    [DbContext(typeof(MockDatabaseDbContext))]
    [Migration("20190914193901_AddPlayerTournamentsSignUp")]
    partial class AddPlayerTournamentsSignUp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GolfHandicapMobile.MockDatabase.Database.Models.GolfClub", b =>
                {
                    b.Property<Guid>("GolfClubId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Name");

                    b.Property<string>("PostalCode");

                    b.Property<string>("Region");

                    b.Property<string>("TelephoneNumber");

                    b.Property<string>("Town");

                    b.Property<string>("Website");

                    b.HasKey("GolfClubId");

                    b.ToTable("GolfClubs");
                });

            modelBuilder.Entity("GolfHandicapMobile.MockDatabase.Database.Models.GolfClubMembership", b =>
                {
                    b.Property<Guid>("MembershipId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AcceptedDateTime");

                    b.Property<Guid>("GolfClubId");

                    b.Property<string>("GolfClubName");

                    b.Property<DateTime>("PlayerDateOfBirth");

                    b.Property<string>("PlayerFullName");

                    b.Property<string>("PlayerGender");

                    b.Property<Guid>("PlayerId");

                    b.Property<DateTime>("RejectionDateTime");

                    b.Property<DateTime>("RejectionMessage");

                    b.HasKey("MembershipId");

                    b.ToTable("GolfClubMemberships");
                });

            modelBuilder.Entity("GolfHandicapMobile.MockDatabase.Database.Models.PlayerTournamentSignIn", b =>
                {
                    b.Property<Guid>("PlayerId");

                    b.Property<Guid>("TournamentId");

                    b.HasKey("PlayerId", "TournamentId");

                    b.ToTable("PlayerTournamentSignIns");
                });

            modelBuilder.Entity("GolfHandicapMobile.MockDatabase.Database.Models.Tournament", b =>
                {
                    b.Property<Guid>("TournamentId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("GolfClubId");

                    b.Property<bool>("HasBeenCancelled");

                    b.Property<bool>("HasBeenCompleted");

                    b.Property<bool>("HasResultBeenProduced");

                    b.Property<Guid>("MeasuredCourseId");

                    b.Property<string>("MeasuredCourseName");

                    b.Property<int>("MeasuredCourseSSS");

                    b.Property<string>("MeasuredCourseTeeColour");

                    b.Property<int>("PlayerCategory");

                    b.Property<int>("PlayersScoresRecordedCount");

                    b.Property<int>("PlayersSignedUpCount");

                    b.Property<DateTime>("TournamentDate");

                    b.Property<int>("TournamentFormat");

                    b.Property<string>("TournamentName");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("HandicapMobile.MockAPI.Database.Models.Player", b =>
                {
                    b.Property<Guid>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmailAddress");

                    b.Property<decimal>("ExactHandicap");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("HandicapMobile.MockAPI.Database.Models.RegisteredUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Password");

                    b.HasKey("UserId");

                    b.ToTable("RegisteredUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
