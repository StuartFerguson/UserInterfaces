@{
    ViewBag.Title = "Tournaments";
    Layout = "~/Areas/MatchSecretary/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <table id="tournamentList" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Tournament Id</th>
                <th>Name</th>
                <th>Date</th>
                <th>Format</th>
                <th>Player Category</th>
                <th>Course</th>
                <th>Tee Colour</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
    </table>

    <a class="btn btn-primary btn-user btn-block" asp-action="CreateTournament" asp-controller="Home" asp-area="MatchSecretary"><i class="fa fa-plus"></i> New Tournament</a>
</div>

<script>
    $(document).ready(function()
    {
        $("#tournamentList").DataTable({
            "processing": false, // for show progress bar
            "serverSide": true, // for process server side
            "filter": true, // this is for disable filter (search box)
            "orderMulti": false, // for disable multiple column at once
            "ajax": {
                "url": "GetTournamentListAsJson",
                "type": "POST",
                "datatype": "json"
            },
            "columnDefs":
            [
                {
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }
            ],
            "columns": [
                { "data": "tournamentId", "name": "tournamentId", "autoWidth": true },
                { "data": "name", "name": "name", "autoWidth": true },
                {
                    "data": "date",
                    "name": "date",
                    "autoWidth": true,
                    render: function(d) { return moment(d).format("DD-MM-YYYY"); }
                },
                { "data": "format", "name": "format", "autoWidth": true },
                { "data": "playerCategory", "name": "playerCategory", "autoWidth": true },
                { "data": "measuredCourseName", "name": "measuredCourseName", "autoWidth": true },
                { "data": "measuredCourseTeeColour", "name": "measuredCourseTeeColour", "autoWidth": true },
                { "data": "status", "name": "status", "autoWidth": true },
                {
                    "render": function(data, type, full, meta)
                        {
                            if (full.status === 'Cancelled' || full.status === 'Resulted')
                            {
                                return '';
                            }

                            var markup =
                                '<button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">Actions' +
                                '<span class="caret"></span></button>' +
                                '<ul class="dropdown-menu">';

                            if (full.status === 'Created')
                            {
                                markup = markup +
                                    '<li><a href="#" onclick="completeTournament(\'' +
                                    full.name +
                                    '\', \'' +
                                    full.tournamentId +
                                    '\')">Complete</a></li>';
                                markup = markup +
                                    '<li><a href="#" onclick="cancelTournament(\'' +
                                    full.name +
                                    '\', \'' +
                                    full.tournamentId +
                                    '\')">Cancel</a></li>';
                            }

                            if (full.status === 'Completed')
                            {
                                markup = markup +
                                    '<li><a href="#" onclick="produceTournamentResult(\'' +
                                    full.name +
                                    '\', \'' +
                                    full.tournamentId +
                                    '\')">Produce Result</a></li>';
                            }

                            markup = markup + '</ul>';

                            return markup;
                        }
                    }
                ],
                "order": [[2, "asc"]]

            });
            autoRefresh();
        });

    function completeTournament(tournamentName, tournamentId)
    {
        bootbox.confirm({
            message: "This will mark the " + tournamentName + " tournament as completed, are you sure?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result === true)
                {
                    // Make a call to the server to complete the tournament
                    $.ajax(
                        {
                            url: "CompleteTournament",
                            type: "PUT",
                            data: {
                                tournamentId: tournamentId
                            },
                            success: function(data, textStatus, jqXHR)
                            {
                                bootbox.alert("Tournament " + tournamentName + " completed successfully");
                            },
                            error: function(jqXHR, textstatus, errorThrown)
                            {
                                bootbox.alert("Error completing tournament " + tournamentName);
                            }
                        });
                }
            }
        });
    }

    function cancelTournament(tournamentName, tournamentId)
    {
        bootbox.prompt({
            title: "Cancel Tournament " + tournamentName,
            inputType: 'select',
            inputOptions: [
                {
                    text: 'Select a Cancellation Reason',
                    value: '',
                },
                {
                    text: 'Course Closure',
                    value: 'Course Closure',
                },
                {
                    text: 'Created in Error',
                    value: 'Created in Error',
                }],
            callback: function (result)
            {
                if (result !== '')
                {
                    // Make a call to the server to cancel the tournament
                    $.ajax(
                        {
                            url: "CancelTournament",
                            type: "PUT",
                            data: {
                                tournamentId: tournamentId,
                                cancellationReason: result
                            },
                            success: function(data, textStatus, jqXHR)
                            {
                                bootbox.alert("Tournament " + tournamentName + " cancelled successfully");
                            },
                            error: function(jqXHR, textstatus, errorThrown)
                            {
                                bootbox.alert("Error completing tournament " + tournamentName);
                            }
                        });
                }
            }
        });
    }

    function produceTournamentResult(tournamentName, tournamentId)
    {
        bootbox.confirm({
            message: "This will produce the result for " + tournamentName + " tournament, are you sure?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result === true)
                {
                    // Make a call to the server to complete the tournament
                    $.ajax(
                        {
                            url: "ProduceTournamentResult",
                            type: "PUT",
                            data: {
                                tournamentId: tournamentId
                            },
                            success: function(data, textStatus, jqXHR)
                            {
                                bootbox.alert("Tournament " + tournamentName + " result produced successfully");
                            },
                            error: function(jqXHR, textstatus, errorThrown)
                            {
                                bootbox.alert("Error producing result for tournament " + tournamentName);
                            }
                        });
                }
            }
        });
    }

    function autoRefresh() {
        $('#tournamentList').DataTable().ajax.reload(null,false);
    }

    setInterval('autoRefresh()', 5000); 
</script>
